openapi: 3.0.2

servers:
  - description: Local Dev
    url: http://localhost:5000
  - description: Mock Service
    url: https://mock.example.com/example
  - description: Dev Api
    url: https://api.dev.example.com/example
  - description: Staging Api
    url: https://api.staging.example.com/example
  - description: Prod Api
    url: https://api.example.com/example
info:
  title: Agrio Example Service Api
  description: Agrio Example Services Documentation
  contact:
    email: admin@sophietech.com
  version: "v1"

externalDocs:
  description: Documentation
  url: https://doc-example.azurewebsites.net/example

tags:
  - name: Warehouses
    description: Manage warehouses
  - name: Products
    description: Manage products
  - name: Stocks
    description: Manage stocks

paths:
  /warehouses:
     get:
      tags:
        - Warehouses
      summary: Get all warehouses in all cities
      description: Get all warehouses in all cities
      operationId: getWarehouses
      parameters:
        - $ref: "#/components/parameters/AcceptLanguageParameter"
        - $ref: "#/components/parameters/Offset"
        - $ref: "#/components/parameters/Limit"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WarehouseListModel"
          headers:
            Content-Language:
              $ref: "#/components/headers/Content-Language"
        "204":
          $ref: "#/components/responses/NoContent"
      security:
        - bearer: []
      x-yaver-security-roles: superadmin,admin
      
     post:
      tags:
        - Warehouses
      summary: Create new warehouse
      description: Create new warehouse
      operationId: createWarehouse
      parameters:
        - $ref: "#/components/parameters/AcceptLanguageParameter"
      requestBody:
        description: Create warehouse request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WarehouseCreateModel"
        required: true

      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WarehouseListItemModel"
          headers:
            Content-Language:
              $ref: "#/components/headers/Content-Language"
        "400":
          $ref: "#/components/responses/BadRequest"
        "409":
          $ref: "#/components/responses/Conflict"
      security:
        - bearer: []
      x-yaver-security-roles: superadmin,admin

  /warehouses/{warehouseId}:
    get:
      tags:
        - Warehouses
      summary: Get warehouse by id
      description: Get warehouse by id
      operationId: getWarehouseById
      parameters:
        - $ref: "#/components/parameters/AcceptLanguageParameter"
        - $ref: "#/components/parameters/WarehouseId"
        
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WarehouseListItemModel"
          headers:
            Content-Language:
              $ref: "#/components/headers/Content-Language"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
      security:
        - bearer: []
      x-yaver-security-roles: superadmin,admin

  /products:
    post:
      tags:
        - Products
      summary: Create product
      description: Create 
      operationId: createProduct
      parameters:
        - $ref: "#/components/parameters/AcceptLanguageParameter"
      requestBody:
        description: Create product
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductCreateModel"
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductViewModel"
          headers:
            Content-Language:
              $ref: "#/components/headers/Content-Language"
        "400":
          $ref: "#/components/responses/BadRequest"
        "409":
          $ref: "#/components/responses/Conflict"
      security:
        - bearer: []
      x-yaver-security-roles: superadmin,admin

  /warehouses/{warehouseId}/stocks:
     get:
      tags:
        - Stocks
      summary: Get stocks in warehouse
      description: Get stocks in warehouse
      operationId: getStocks
      parameters:
        - $ref: "#/components/parameters/AcceptLanguageParameter"
        - $ref: "#/components/parameters/WarehouseId"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StocksViewModel"
          headers:
            Content-Language:
              $ref: "#/components/headers/Content-Language"
        "400":
          $ref: "#/components/responses/BadRequest"
      security:
        - bearer: []
      x-yaver-security-roles: superadmin,admin
  /warehouses/{warehouseId}/movement:
     post:
      tags:
        - Stocks
      summary: Create stock movement
      description: Create stock movement
      operationId: createMovement
      parameters:
        - $ref: "#/components/parameters/AcceptLanguageParameter"
        - $ref: "#/components/parameters/WarehouseId"
      requestBody:
        description: Create stock movement
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MovementCreateModel"
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MovementViewModel"
          headers:
            Content-Language:
              $ref: "#/components/headers/Content-Language"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
      security:
        - bearer: []
      x-yaver-security-roles: superadmin,admin
      
components:
  headers:
    Location:
      schema:
        type: string
        format: url
      description: A link to created resource
      example: 3
    Content-Language:
      schema:
        type: string
        enum:
          - tr-TR
          - en-US
      description: the language(s) intended for the audience
      example: tr-TR
    X-RateLimit-Limit:
      schema:
        type: integer
      description: Request limit per hour.
    X-RateLimit-Remaining:
      schema:
        type: integer
      description: The number of requests left for the time window.
    X-RateLimit-Reset:
      schema:
        type: string
        format: date-time
      description: The UTC date/time at which the current rate limit window resets.

  parameters:
    DeviceHashHeaderParameter:
      name: X-Device-Hash
      in: header
      required: true
      schema:
        type: string
    AcceptLanguageParameter:
      name: Accept-Language
      in: header
      required: true
      schema:
        type: string
        enum:
          - tr
          - en
          - tr-TR
          - en-US
      description: language(s) client is able to understand, and which locale variant is preferred
      example: tr
    Offset:
      name: offset
      in: query
      description: The number of items to skip before starting to collect the result set.
      schema:
        type: integer
        minimum: 0
        default: 0
    Limit:
      name: limit
      in: query
      description: The numbers of items to return.
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20
    Term:
      name: term
      in: query
      description:
        Filter argument in which to retrieve the results. Basic text search on
        relevant fields
      schema:
        type: string
        default: ""
    Sort:
      name: sort
      in: query
      description:
        Order in which to retrieve the results. Multiple sort criteria can not
        be passed
      schema:
        type: string
        default: ""

    WarehouseId:
      name: warehouseId
      in: path
      schema:
        type: string
        format: uuid
      required: true
      description: Warehouse Id

  responses:
    BadRequest:
      description: The specified resource was not valid
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorViewModel"
      headers:
        Content-Language:
          $ref: "#/components/headers/Content-Language"
    Forbidden:
      description: You are not allowed to take specified action
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorViewModel"
      headers:
        Content-Language:
          $ref: "#/components/headers/Content-Language"
    Conflict:
      description: The specified resource already persisted
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorViewModel"
      headers:
        Content-Language:
          $ref: "#/components/headers/Content-Language"
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorViewModel"
      headers:
        Content-Language:
          $ref: "#/components/headers/Content-Language"
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorViewModel"
      headers:
        Content-Language:
          $ref: "#/components/headers/Content-Language"
    NoContent:
      description: No Content

  securitySchemes:
    bearer:
      type: apiKey
      name: Authorization
      in: header
      description:
        'Authorization header using the Bearer scheme. Ex: "Authorization:
        Bearer {token}"'

  schemas:
    # Common Models
    DictionaryModel:
      type: object
      properties:
        id:
          type: integer
          example: 15
        name:
          type: string
          example: "some value"
    ErrorViewModel:
      type: object
      properties:
        code:
          type: string
          example: fC9LZX
        title:
          type: string
          example: Invalid request parameters
        detail:
          type: string
          example: The provided resource parameters are not valid.
        errors:
          type: array
          items:
            type: string
            example: validation error message
      required:
        - code
        - title
        - detail

    
    CityModel:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Ankara

    DistrictModel:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Cankaya

    # Contract Models

    ProductViewModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
          x-yaver-ui:
            type: INPUT
            inputType: hidden
        stockCode:
          type: string
          example: STC1234567
          x-yaver-ui:
            type: INPUT
            placeholder: label.stockCode
        stockName:
          type: string
          example: Demo Product
          x-yaver-ui:
            type: INPUT
            placeholder: label.stockName
        unitSet:
          type: string
          example: Volume
          x-yaver-ui:
            type: INPUT
            placeholder: label.unitSet
        unit:
          type: string
          example: Kilogram
          x-yaver-ui:
            type: INPUT
            placeholder: label.unit
        barcode:
          type: string
          example: BRC1234567
          x-yaver-ui:
            type: INPUT
            placeholder: label.barcode
        description:
          type: string
          example: Description for product
          x-yaver-ui:
            type: INPUT
            placeholder: label.description
        purchasingPrice:
          type: number
          format: double
          example: 10.50
          x-yaver-ui:
            type: INPUT
            placeholder: label.purchasingPrice
        sellingPrice:
          type: number
          format: double
          example: 10.60
          x-yaver-ui:
            type: INPUT
            placeholder: label.sellingPrice

    ProductCreateModel: 
      type: object
      properties:
        stockCode:
          type: string
          example: STC1234567
          x-yaver-validators:
            - type: required
              message: err.required
            - type: minLength
              param: 10
              message: err.minLength
          x-yaver-ui:
            type: INPUT
            inputType: text
            placeholder: label.stockCode
        stockName:
          type: string
          example: Demo Product
          x-yaver-validators:
            - type: required
              message: err.required
            - type: minLength
              param: 3
              message: err.minLength
          x-yaver-ui:
            type: INPUT
            inputType: text
            placeholder: label.stockName
        unitSet:
          type: string
          example: Volume
          x-yaver-validators:
            - type: required
              message: err.required
          x-yaver-ui:
            type: INPUT
            inputType: text
            placeholder: label.stringField
        unit:
          type: string
          example: Kilogram
          x-yaver-validators:
            - type: required
              message: err.required
            - type: minLength
              param: 3
              message: err.minLength
          x-yaver-ui:
            type: INPUT
            inputType: text
            placeholder: label.stringField
        barcode:
          type: string
          example: BRC1234567
          x-yaver-ui:
            type: INPUT
            inputType: text
            placeholder: label.stringField
        description:
          type: string
          example: Description for product
          x-yaver-ui:
            type: INPUT
            inputType: text
            placeholder: label.stringField
        purchasingPrice:
          type: number
          format: double
          example: 10.50
          x-yaver-ui:
            type: INPUT
            inputType: text
            placeholder: label.doubleField
        sellingPrice:
          type: number
          format: double
          example: 10.60
          x-yaver-ui:
            type: INPUT
            inputType: text
            placeholder: label.doubleField

    MovementCreateModel:
      type: object
      properties:
        stockId:
          type: string
          format: uuid
          example: ea0d6652-30d0-11ed-a261-0242ac120002
          x-yaver-validators:
            - type: required
              message: err.required
          x-yaver-ui:
            type: INPUT
            inputType: text
            placeholder: label.stockId
        direction:
          type: string
          enum:
            - in
            - out
          x-yaver-ui:
            type: SELECT
            placeholder: label.direction
        date:
          type: string
          format: date-time
          example: "2020-02-20"
          x-yaver-ui:
            type: INPUT
            inputType: date
            placeholder: label.date
        quantity:
          type: number
          format: double
          example: 10
          x-yaver-ui:
            type: INPUT
            inputType: text
            placeholder: label.quantity
        description:
          type: string
          example: Description for movement
          x-yaver-ui:
            type: INPUT
            inputType: text
            placeholder: label.description
        referenceCode:
          type: string
          example: Reference code for movement
          x-yaver-ui:
            type: INPUT
            inputType: text
            placeholder: label.referenceCode

    MovementViewModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
          x-yaver-ui:
            type: INPUT
            inputType: 
        warehouse:
          type: object
          $ref: "#/components/schemas/WarehouseListItemModel"
        product:
          type: object
          $ref: "#/components/schemas/ProductViewModel"
        direction:
          type: string
          enum:
            - in
            - out
          x-yaver-ui:
            type: SELECT
            placeholder: label.direction
        date:
          type: string
          format: date-time
          example: "2020-02-20"
          x-yaver-ui:
            type: INPUT
            inputType: date
            placeholder: label.date
        quantity:
          type: number
          format: double
          example: 10
          x-yaver-ui:
            type: INPUT
            inputType: text
            placeholder: label.quantity
        description:
          type: string
          example: Description for movement
          x-yaver-ui:
            type: INPUT
            inputType: text
            placeholder: label.description
        referenceCode:
          type: string
          example: Reference code for movement
          x-yaver-ui:
            type: INPUT
            inputType: text
            placeholder: label.referenceCode

    WarehouseCreateModel:
      type: object
      properties:
        warehouseName:
          type: string
          example: Main Depo
          x-yaver-validators:
            - type: required
              message: err.required
            - type: minLength
              param: 2
              message: err.minLength
          x-yaver-ui:
            type: INPUT
            inputType: text
            placeholder: label.warehouseName
        cityId:
          type: integer
          example: 1
          x-yaver-validators:
            - type: required
              message: err.required
          x-yaver-ui:
            type: SELECT
            placeholder: label.cityId
        districtId:
          type: integer
          example: 1
          x-yaver-validators:
            - type: required
              message: err.required
          x-yaver-ui:
            type: SELECT
            placeholder: label.districtId
        address:
          type: string
          example: Arjantin cad. 11/5
          x-yaver-validators:
            - type: required
              message: err.required
            - type: minLength
              param: 2
              message: err.minLength
          x-yaver-ui:
            type: INPUT
            inputType: text
            placeholder: label.address
        description:
          type: string
          example: Base warehouse for city
          x-yaver-validators:
            - type: required
              message: err.required
            - type: minLength
              param: 2
              message: err.minLength
          x-yaver-ui:
            type: INPUT
            inputType: text
            placeholder: label.description

    WarehouseListModel:
      type: object
      properties:
        totalCount:
          type: integer
          description: Total items count
        items:
          type: array
          items:
            $ref: "#/components/schemas/WarehouseListItemModel"

    WarehouseListItemModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
          x-yaver-ui:
            type: INPUT
            inputType: hidden
        name:
          type: string
          example: Main Warehouse
          x-yaver-ui:
            type: INPUT
            inputType: text
            placeholder: label.name
        city:
          type: object
          $ref: "#/components/schemas/CityModel"
          
        district:
          type: object
          $ref: "#/components/schemas/DistrictModel"
    StocksViewModel:
      type: object
      properties:
        warehouse:
          type: object
          $ref: "#/components/schemas/WarehouseListItemModel"
        product:
          type: object
          $ref: "#/components/schemas/ProductViewModel"
        quantity:
          type: number
          format: double
          example: 10
          x-yaver-ui:
            type: INPUT
            inputType: text
            placeholder: label.quantity
        
    
          
x-yaver:
  resources:
    - name: Warehouses
      schemas:
        create: WarehouseCreateModel
        view: WarehouseListModel
        list: WarehouseListModel
        list-item: WarehouseListItemModel
      operations:
        create: createWarehouse
        get: getWarehouseById
        list: getWarehouses
    - name: Products
      schemas:
        create: ProductCreateModel
        view: ProductViewModel
      operations:
        create: 
    - Stocks:
      schemas:
        create: createMovement
      operations:
        create: createMovement
    

